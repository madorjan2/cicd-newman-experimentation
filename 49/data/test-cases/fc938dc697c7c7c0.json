{"uid":"fc938dc697c7c7c0","name":"New Ad, Same Address","fullName":"Test Cycle 6 - Posting Ads/Test Case 15 - Existing Address#New Ad, Same Address","historyId":"deba92f7-0a1b-46ac-b2ee-60d0aecc79e7","time":{"start":1707219028262,"stop":1707219028566,"duration":304},"descriptionHtml":"Posts a new ad in the name of the given user id.","status":"failed","statusMessage":"Status code is 400, Received correct error message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"descriptionHtml":"Posts a new ad in the name of the given user id.","status":"failed","statusMessage":"Status code is 400, Received correct error message","steps":[{"name":"Status code is 400","time":{"start":1707219028562,"stop":1707219028562,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 201","statusTrace":"Error: expected response to have status code 400 but got 201\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Received correct error message","time":{"start":1707219028563,"stop":1707219028563,"duration":0},"status":"failed","statusMessage":"jsonData is not defined","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4d5e705ca24c1293","name":"TestScript","source":"4d5e705ca24c1293.txt","type":"text/plain","size":751},{"uid":"d9ba390c20191ef0","name":"Request Headers","source":"d9ba390c20191ef0.json","type":"application/json","size":680},{"uid":"b3de29a38e7418ef","name":"Request Body","source":"b3de29a38e7418ef.txt","type":"text/plain","size":682},{"uid":"16fcea5525294714","name":"Response Headers","source":"16fcea5525294714.json","type":"application/json","size":463},{"uid":"cdf33e1d38f4efa1","name":"Response Body","source":"cdf33e1d38f4efa1.txt","type":"text/plain","size":34}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Test Cycle 6 - Posting Ads"},{"name":"suite","value":"Test Case 15 - Existing Address"},{"name":"tag","value":"API"},{"name":"tag","value":"ads"},{"name":"tag","value":"post"},{"name":"tag","value":"negative"},{"name":"severity","value":"Normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - http://ec2-13-60-30-176.eu-north-1.compute.amazonaws.com/api/ads/46/ads"},{"name":"Response Code","value":"201"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["ads","negative","post","API"]},"source":"fc938dc697c7c7c0.json","parameterValues":["POST - http://ec2-13-60-30-176.eu-north-1.compute.amazonaws.com/api/ads/46/ads","201"]}