{"uid":"36dbc23d60873e29","name":"Register User","fullName":"Test Cycle 1 - Registration/Test Case 33 - Existing Email#Register User","historyId":"6c09e279-934d-450d-befa-5031093caf3f","time":{"start":1706295664859,"stop":1706295665098,"duration":239},"status":"failed","statusMessage":"Received correct error message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Received correct error message","steps":[{"name":"Received correct error message","time":{"start":1706295665095,"stop":1706295665095,"duration":0},"status":"failed","statusMessage":"expected 'Email address should be valid' to deeply equal 'Email already exists: undefined'","statusTrace":"Error: expected 'Email address should be valid' to deeply equal 'Email already exists: undefined'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:17:44)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is 400","time":{"start":1706295665095,"stop":1706295665095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"597f10a2fdbcdd13","name":"TestScript","source":"597f10a2fdbcdd13.txt","type":"text/plain","size":776},{"uid":"a48a94375a9c61c9","name":"Request Headers","source":"a48a94375a9c61c9.json","type":"application/json","size":378},{"uid":"a92a75f50b48f7e4","name":"Request Body","source":"a92a75f50b48f7e4.txt","type":"text/plain","size":221},{"uid":"941fc4976d91a2b8","name":"Response Headers","source":"941fc4976d91a2b8.json","type":"application/json","size":394},{"uid":"ffd443fb838aed03","name":"Response Body","source":"ffd443fb838aed03.txt","type":"text/plain","size":66}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Test Cycle 1 - Registration"},{"name":"suite","value":"Test Case 33 - Existing Email"},{"name":"tag","value":"API"},{"name":"tag","value":"registration"},{"name":"tag","value":"negative"},{"name":"severity","value":"NORMAL"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - http://ec2-18-153-65-148.eu-central-1.compute.amazonaws.com/api/users/registration"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["negative","API","registration"]},"source":"36dbc23d60873e29.json","parameterValues":["POST - http://ec2-18-153-65-148.eu-central-1.compute.amazonaws.com/api/users/registration","400"]}